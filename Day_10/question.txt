1. Please create a delete_person function that deletes any given person from the list and returns a new list without that person.
Expected result:
Result:

['juan', 'ana', 'michelle', 'stefany', 'lucy', 'barak']
['ana', 'michelle', 'daniella', 'stefany', 'lucy', 'barak']
['juan', 'ana', 'michelle', 'daniella', 'stefany', 'lucy', 'barak']

2. Write a function merge_list that merges two lists and 
returns a single new list merging all the values of both lists.

Declare an empty list.

Loop the two lists.

Append the results into an empty list.

Print the new variable with the merged lists.

ðŸ’¡ Hints:
You will have to loop through each list and insert their items into a new list.

There are more ways to merge lists in Python. This would be a good time for you to search on the Internet "how to merge lists in python".

Expected result:
['Lebron', 'Aaliyah', 'Diamond', 'Dominique', 'Aliyah', 'Jazmin', 'Darnell', 'Lucas', 
 'Jake', 'Scott', 'Amy', 'Molly', 'Hannah', 'Lucas']

3. At this time, the function format_greeting is printing the names only. Please update the mapping function so it creates a list where each item contains the following:
'Hello, my name is <name> and I am <age> years old'
ðŸ’¡ Hints:
You have to get the age of each person based on their birth_date.

Take your time to understand the already defined calculate_age function.

Search in Google "How to get the age of a given birth date in python".

Inside your format_greeting function you have to return a concatenation.

Expected result:
The result should be similar to this, but the ages might be different.

[ 'Hello, my name is Joe and I am 32 years old',
  'Hello, my name is Bob and I am 42 years old',
  'Hello, my name is Erika and I am 28 years old',
  'Hello, my name is Dylan and I am 18 years old',
  'Hello, my name is Steve and I am 14 years old' ]

4. Our customer needs a program that counts the letter repetitions in a given string, for example:

The string "Hello World" contains the following repetitions h=1 e=1 l=3 o=2 w=1 r=1 d=1.

Count the letters of the string in the variable par and print the number of times a letter is repeated throughout the string.

Capitalization should not affect the count (i.e. if there is a string that contains a capital A as well as a lowercase a the count for "a" should be 2).

Spaces should be ignored!

Expected result:
print(count("Hello World"))
# This will print: {'h': 1, 'e': 1, 'l': 3, 'o': 2, 'w': 1, 'r': 1, 'd': 1}
Javascript

5. Write a function called isGreaterThanTen. Given a number, isGreaterThanTen returns true if it is greater than 10, otherwise it returns false.
Example:
let output = isGreaterThanTen(11);
console.log(output); // --> true

6.Write a function called addFullNameProperty. Given an object that has a firstName 
property and a lastName property, addFullNameProperty adds a fullName property to the object, its value is a string with the first name and last name separated by a space.

7.Write a function called removeArrayValues. Given an object, removeArrayValues removes any properties whose values are arrays.

8. Write a function called select. Given an array and an object, select returns a new object whose properties must be on the given array and 
the given object as well

9. Given a sorted array, such as this:

10. let arr = [1, 3, 16, 22, 31, 33, 34];
You can use binary search for the value 31, as follows:

Pick the midpoint: 22.

The value is higher than 22, so now consider only the right half of the previous array: [...31, 33, 34]

Pick the midpoint: 33.

The value is lower than 33, so now consider only the left half of the previous array: [...31...]

Pick the midpoint: 31.

You've hit the value.

Return the index of the value.

The function search receives an array of numbers and a number, it should return the position of the number given using binary search.
 Example:
let arr = [1, 3, 16, 22, 31, 33, 34];
console.log(search(arr, 31)); // --> 4